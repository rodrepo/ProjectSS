@using ProjectSS.Common
@model ProjectSS.Web.Models.ProposalViewModel
@{
    ViewBag.Title = "Manage";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var canAccessOM = User.IsInRole(RoleType.OM.ToString());
    var canAccessBD = User.IsInRole(RoleType.BD.ToString());
}
<div class="panel panel-default">
    <div class="panel-heading">
        <div class="col-sm-12">
            <div class="col-sm-6">
                <h4>CMR NUMBER</h4>
            </div>
            <div class="col-sm-6">
                <div class="pull-right" style="padding-top:10px">
                    @if (canAccessOM == true || canAccessBD == true)
                    {
                        <button type="submit" class="btn btn-success btn-xs">Update</button>
                    }
                    @if (canAccessOM == true)
                    {
                        <button type="button" data-toggle="modal" data-target="#deletemodal" class="btn btn-danger btn-xs">Delete</button>
                    }
                    &nbsp;<a type="button" class="btn btn-info btn-xs" href="@Url.Action("Index", "Proposal")">Back</a>
                </div>
            </div>
        </div>
    </div>
    <br>
    <div class="panel-body">
        <form role="form">
            <div class="form-group col-sm-3">
                <label>Title</label>
                @Html.TextBoxFor(model => model.Title, new { @class = "form-control", @type = "text", @required = "required", @placeholder = "Enter Proposal Title" })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
            <div class="form-group col-sm-3">
                <label>Company Name</label>
                @Html.TextBoxFor(model => model.CompanyName, new { @class = "form-control", @readonly = "readonly" })
                @Html.ValidationMessageFor(model => model.CompanyName, "", new { @class = "text-danger" })
            </div>
            <div class="form-group col-sm-3">
                <label>Contact Person</label>
                @Html.TextBoxFor(model => model.ContactPerson, new { @class = "form-control", @readonly = "readonly" })
                @Html.ValidationMessageFor(model => model.ContactPerson, "", new { @class = "text-danger" })
            </div>
            <div class="form-group col-sm-3">
                <label>Position</label>
                @Html.TextBoxFor(model => model.ContactPersonPosition, new { @class = "form-control", @readonly = "readonly" })
                @Html.ValidationMessageFor(model => model.ContactPersonPosition, "", new { @class = "text-danger" })
            </div>
            <div class="form-group col-sm-4">
                <label>Industry</label>
                @Html.TextBoxFor(model => model.Industry, new { @class = "form-control", @readonly = "readonly" })
                @Html.ValidationMessageFor(model => model.Industry, "", new { @class = "text-danger" })
            </div>
            <div class="form-group col-sm-4">
                <label>Location</label>
                @Html.TextBoxFor(model => model.Location, new { @class = "form-control", @readonly = "readonly" })
                @Html.ValidationMessageFor(model => model.Location, "", new { @class = "text-danger" })
            </div>
            <div class="form-group col-sm-4">
                <label>Project Cost</label>
                @Html.TextBoxFor(model => model.Cost, "0.00", new { @class = "form-control", @type = "text", @required = "required" })
                @Html.ValidationMessageFor(model => model.Cost, "", new { @class = "text-danger" })
            </div>
            <div class="form-group col-sm-12">
                <label>Description</label>
                @Html.TextAreaFor(model => model.Description, new { @class = "form-control", @row = "3", @required = "required", @placeholder = "Enter Description" })
                @Html.ValidationMessageFor(model => model.ContactPerson, "", new { @class = "text-danger" })
            </div>
            <div class="form-group col-sm-4">
                <label>Business Developement</label>
                @Html.DropDownListFor(model => model.BDId, (List<SelectListItem>)ViewBag.BDs, "Select Business Developement", new { @class = "form-control", @required = "required", })
            </div>
            <div class="form-group col-sm-4">
                <label>Technical Head</label>
                @Html.DropDownListFor(model => model.THId, (List<SelectListItem>)ViewBag.THs, "Select Technical Head", new { @class = "form-control", @required = "required", })
            </div>
            <div class="form-group col-sm-4">
                <label>Technical Specialist</label>
                @Html.DropDownListFor(model => model.TSId, (List<SelectListItem>)ViewBag.TSs, "Select Technical Specialist", new { @class = "form-control", @required = "required", })
            </div>
        </form>
    </div>
</div>
